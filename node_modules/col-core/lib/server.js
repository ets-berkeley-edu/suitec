/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('lodash');
var bodyParser = require('body-parser');
var config = require('config');
var cookieParser = require('cookie-parser');
var cors = require('cors');
var express = require('express');
var http = require('http');
var util = require('util');

var log = require('./logger')('col-core/server');

/**
 * Start the Collabosphere Express server on the configured port
 *
 * @return {Express}                The created express server
 */
var setUpServer = module.exports.setUpServer = function() {
  // Create the express server
  var app = express();

  // Expose the HTTP server on the express app to allow other modules to hook into it
  app.httpServer = http.createServer(app);

  // Start listening for requests
  var port = config.get('app.port');
  app.httpServer.listen(port, 'localhost');

  // Don't output pretty JSON
  app.set('json spaces', 0);

  // Don't output the x-powered-by header
  app.set('x-powered-by', false);

  // Collabosphere stores a user's id in a signed cookie
  app.use(cookieParser(config.get('cookie.secret')));

  /*!
   * Collabosphere supports the following type of request encodings:
   *
   *  * urlencoded (regular POST requests)
   *  * application/json
   *  * TODO: multipart (file uploads)
   *
   * A maximum limit of 250kb is imposed for `urlencoded` and `application/json` requests. This limit only
   * applies to the *incoming request data*. If the client needs to send more than 250kb, it should consider
   * using a proper multipart form request
   */
  app.use(bodyParser.urlencoded({'limit': '250kb', 'extended': true}));
  app.use(bodyParser.json({'limit': '250kb'}));

  app.use(cors());

  // Catch-all error handler
  app.use(function(err, req, res, next) {
    log.error({
      err: err,
      req: req,
      res: res
    }, 'Unhandled error in the request chain, caught at the default error handler');
    return abort(res, 500, 'An unexpected error occurred');
  });

  log.info(util.format('Collabosphere server is listening at http://127.0.0.1:%s', port));

  return app;
};

/**
 * Abort a request with a given code and response message
 *
 * @param  {Response}   res         The express response object
 * @param  {Number}     code        The HTTP response code
 * @param  {String}     message     The message body to provide as a reason for aborting the request
 * @api private
 */
var abort = function(res, code, message) {
  res.setHeader('Connection', 'Close');
  return res.status(code).send(message);
};
