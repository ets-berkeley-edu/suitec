/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

module.exports = function(client) {
  client.activities = {};

  /**
   * Export the activities for a course as a CSV file
   *
   * @param  {Course}         course                            The Canvas course in which the user is interacting with the API
   * @param  {Function}       callback                          Standard callback function
   * @param  {Object}         callback.err                      An error that occurred, if any
   * @param  {Object}         callback.body                     The JSON response from the REST API
   * @param  {Response}       callback.response                 The response object as returned by requestjs
   * @see col-activities/lib/rest.js for more information
   */
  client.activities.exportActivities = function(course, callback) {
    var requestUrl = client.util.apiPrefix(course) + '/activities.csv';
    client.request(requestUrl, 'GET', null, null, callback);
  };

  /**
   * Get the activity type configuration for a course
   *
   * @param  {Course}         course                            The Canvas course in which the user is interacting with the API
   * @param  {Function}       callback                          Standard callback function
   * @param  {Object}         callback.err                      An error that occurred, if any
   * @param  {Object}         callback.body                     The JSON response from the REST API
   * @param  {Response}       callback.response                 The response object as returned by requestjs
   * @see col-activities/lib/rest.js for more information
   */
  client.activities.getActivityTypeConfiguration = function(course, callback) {
    var requestUrl = client.util.apiPrefix(course) + '/activities/configuration';
    client.request(requestUrl, 'GET', null, null, callback);
  };

  /**
   * Edit the activity type configration for a course
   *
   * @param  {Course}         course                            The Canvas course in which the user is interacting with the API
   * @param  {Object[]}       activityTypeUpdates               Activity type configuration overrides that should be aplied to the activity type configuration for the course
   * @param  {String}         activityTypeUpdates.type          The type of the activity type configuration override. One of the types in `col-activities/lib/constants.js`
   * @param  {Number}         [activityTypeUpdates.points]      The number of points this activity type should contribute towards a user's points
   * @param  {Boolean}        [activityTypeUpdates.enabled]     Whether activities of this type should contribute towards a user's points
   * @param  {Function}       callback                          Standard callback function
   * @param  {Object}         callback.err                      An error that occurred, if any
   * @param  {Object}         callback.body                     The JSON response from the REST API
   * @param  {Response}       callback.response                 The response object as returned by requestjs
   * @see col-activities/lib/rest.js for more information
   */
  client.activities.editActivityTypeConfiguration = function(course, activityTypeUpdates, callback) {
    var requestUrl = client.util.apiPrefix(course) + '/activities/configuration';
    client.jsonPost(requestUrl, activityTypeUpdates, null, callback);
  };
};
