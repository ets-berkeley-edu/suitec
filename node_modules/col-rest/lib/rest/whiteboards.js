/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

module.exports = function(client) {
  client.whiteboards = {};

  /**
   * Get a whiteboard, including the list of members, online members and whiteboard
   * elements
   *
   * @param  {Course}         course                          The Canvas course in which the user is interacting with the API
   * @param  {Number}         id                              The id of the whiteboard
   * @param  {Function}       callback                        Standard callback function
   * @param  {Object}         callback.err                    An error that occurred, if any
   * @param  {Object}         callback.body                   The JSON response from the REST API
   * @param  {Response}       callback.response               The response object as returned by requestjs
   * @see col-whiteboards/lib/rest.js for more information
   */
  client.whiteboards.getWhiteboard = function(course, id, callback) {
    var requestUrl = client.util.apiPrefix(course) + '/whiteboards/' + client.util.encodeURIComponent(id);
    client.request(requestUrl, 'GET', null, null, callback);
  };

  /**
   * Get the whiteboards to which the current user has access in the current course
   *
   * @param  {Course}         course                          The Canvas course in which the user is interacting with the API
   * @param  {Number}         [limit]                         The maximum number of results to retrieve. Defaults to 10
   * @param  {Number}         [offset]                        The number to start paging from. Defaults to 0
   * @param  {Function}       callback                        Standard callback function
   * @param  {Object}         callback.err                    An error that occurred, if any
   * @param  {Object}         callback.body                   The JSON response from the REST API
   * @param  {Response}       callback.response               The response object as returned by requestjs
   * @see col-whiteboards/lib/rest.js for more information
   */
  client.whiteboards.getWhiteboards = function(course, limit, offset, callback) {
    var requestUrl = client.util.apiPrefix(course) + '/whiteboards';
    var data = {
      'limit': limit,
      'offset': offset
    };
    client.request(requestUrl, 'GET', data, null, callback);
  };

  /**
   * Create a new whiteboard
   *
   * @param  {Course}         course                          The Canvas course in which the user is interacting with the API
   * @param  {String}         title                           The title of the whiteboard
   * @param  {Number[]}       [members]                       The ids of the users that should be added to the whiteboard as members. The current user will automatically be added as a member
   * @param  {Function}       callback                        Standard callback function
   * @param  {Object}         callback.err                    An error that occurred, if any
   * @param  {Object}         callback.body                   The JSON response from the REST API
   * @param  {Response}       callback.response               The response object as returned by requestjs
   * @see col-whiteboards/lib/rest.js for more information
   */
  client.whiteboards.createWhiteboard = function(course, title, members, callback) {
    var requestUrl = client.util.apiPrefix(course) + '/whiteboards';
    var data = {
      'title': title,
      'members': members
    };
    client.request(requestUrl, 'POST', data, null, callback);
  };

  /**
   * Edit a whiteboard
   *
   * @param  {Course}         course                          The Canvas course in which the user is interacting with the API
   * @param  {Number}         id                              The id of the whiteboard that is being edited
   * @param  {String}         title                           The updated title of the whiteboard
   * @param  {Number[]}       [members]                       The ids of the users that should be a member of the whiteboard
   * @param  {Function}       callback                        Standard callback function
   * @param  {Object}         callback.err                    An error that occurred, if any
   * @param  {Object}         callback.body                   The JSON response from the REST API
   * @param  {Response}       callback.response               The response object as returned by requestjs
   * @see col-whiteboards/lib/rest.js for more information
   */
  client.whiteboards.editWhiteboard = function(course, id, title, members, callback) {
    var requestUrl = client.util.apiPrefix(course) + '/whiteboards/' + client.util.encodeURIComponent(id);
    var data = {
      'title': title,
      'members': members
    };
    client.request(requestUrl, 'POST', data, null, callback);
  };
};
