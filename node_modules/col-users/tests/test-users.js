/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('lodash');
var assert = require('assert');

var TestsUtil = require('col-tests');
var UsersTestUtil = require('col-users/tests/util');

describe('Users', function() {

  describe('Me', function() {

    /**
     * Test that verifies that the me feed can be retrieved
     */
    it('can be retrieved', function(callback) {
      TestsUtil.getAssetLibraryClient(null, null, null, function(client, course, user) {
        UsersTestUtil.assertGetMe(client, course, null, function(me) {

          return callback();
        });
      });
    });

    /**
     * Test that verifies that administrators and non-administrators are
     * correctly identified
     */
    it('correctly identifies admins', function(callback) {
      // Verify that all admin roles are correctly returned as admins
      var admin1 = TestsUtil.generateUser(null, null, 'Instructor');
      TestsUtil.getAssetLibraryClient(null, null, admin1, function(client, course, user) {
        UsersTestUtil.assertGetMe(client, course, null, function(me) {
          assert.strictEqual(me.is_admin, true);

          var admin2 = TestsUtil.generateUser(null, null, 'ContentDeveloper');
          TestsUtil.getAssetLibraryClient(null, null, admin2, function(client, course, user) {
            UsersTestUtil.assertGetMe(client, course, null, function(me) {
              assert.strictEqual(me.is_admin, true);

              var admin3 = TestsUtil.generateUser(null, null, 'urn:lti:role:ims/lis/TeachingAssistant');
              TestsUtil.getAssetLibraryClient(null, null, admin3, function(client, course, user) {
                UsersTestUtil.assertGetMe(client, course, null, function(me) {
                  assert.strictEqual(me.is_admin, true);

                  // Verify that other roles are not returned as admins
                  var nonAdmin1 = TestsUtil.generateUser(null, null, 'Student');
                  TestsUtil.getAssetLibraryClient(null, null, nonAdmin1, function(client, course, user) {
                    UsersTestUtil.assertGetMe(client, course, null, function(me) {
                      assert.strictEqual(me.is_admin, false);

                      var nonAdmin2 = TestsUtil.generateUser(null, null, 'FooBar');
                      TestsUtil.getAssetLibraryClient(null, null, nonAdmin2, function(client, course, user) {
                        UsersTestUtil.assertGetMe(client, course, null, function(me) {
                          assert.strictEqual(me.is_admin, false);

                          return callback();
                        });
                      });
                    });
                  });
                });
              });
            });
          });
        });
      });
    });
  });
});
