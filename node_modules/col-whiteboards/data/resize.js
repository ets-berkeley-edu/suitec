#!/usr/bin/env node

/**
 * Copyright Â©2016. The Regents of the University of California (Regents). All Rights Reserved.
 *
 * Permission to use, copy, modify, and distribute this software and its documentation
 * for educational, research, and not-for-profit purposes, without fee and without a
 * signed licensing agreement, is hereby granted, provided that the above copyright
 * notice, this paragraph and the following two paragraphs appear in all copies,
 * modifications, and distributions.
 *
 * Contact The Office of Technology Licensing, UC Berkeley, 2150 Shattuck Avenue,
 * Suite 510, Berkeley, CA 94720-1620, (510) 643-7201, otl@berkeley.edu,
 * http://ipira.berkeley.edu/industry-info for commercial licensing opportunities.
 *
 * IN NO EVENT SHALL REGENTS BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL,
 * INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING OUT OF
 * THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF REGENTS HAS BEEN ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * REGENTS SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE
 * SOFTWARE AND ACCOMPANYING DOCUMENTATION, IF ANY, PROVIDED HEREUNDER IS PROVIDED
 * "AS IS". REGENTS HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
 * ENHANCEMENTS, OR MODIFICATIONS.
 */

var fabric = require('fabric').fabric;
var fs = require('fs');
var Image = require('fabric/node_modules/canvas').Image;

fs.readFile(process.argv[2], function(err, buff) {
  if (err) {
    console.error(err);
    process.exit(1);
  }

  // Resize the canvas so it fits in a thumbnail
  var thumbnailCanvas = fabric.createCanvasForNode(300, 300);
  var ctx = thumbnailCanvas.getContext('2d');

  // Make the thumbnail's background white
  ctx.fillStyle = '#FFFFFF';
  ctx.fillRect(0, 0, 300, 300);

  // Re-scale the whiteboard so it fits the thumbnail
  var img = new Image;
  img.src = buff;
  ctx.drawImage(img, 0, 0, 300, 300);

  // Return the thumbnail
  thumbnailCanvas.nodeCanvas.toBuffer(function(err, thumbnailBuffer) {
    if (err) {
      console.error(err);
      process.exit(1);
    }

    process.stdout.write(thumbnailBuffer);
    process.exit(0);
  });
});
