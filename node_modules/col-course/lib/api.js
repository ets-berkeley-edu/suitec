/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var Joi = require('joi');

var DB = require('col-core/lib/db');
var log = require('col-core/lib/logger')('col-course');

/**
 * Get or create a course
 *
 * @param  {Number}       canvasCourseId      The id of the course in Canvas
 * @param  {Canvas}       canvas              The Canvas instance the course is running on
 * @param  {Function}     callback            Standard callback function
 * @param  {Object}       callback.err        An error object, if any
 * @param  {Course}       callback.course     The course
 */
var getOrCreateCourse = module.exports.getOrCreateCourse = function(canvasCourseId, canvas, callback) {
  // Parameter validation
  var validationSchema = Joi.object().keys({
    'canvasCourseId': Joi.number().required(),
    'canvas': Joi.object().required()
  });

  var validationResult = Joi.validate({
    'canvasCourseId': canvasCourseId,
    'canvas': canvas
  }, validationSchema);

  if (validationResult.error) {
    return callback({'code': 400, 'msg': validationResult.error.details[0].message});
  }

  // Get the course from the DB or create it if it doesn't exist yet
  options = {
    'where': {
      'canvas_course_id': canvasCourseId
    },
    'defaults': {
      'canvas_api_domain': canvas.canvas_api_domain
    }
  };
  DB.Course.findOrCreate(options).complete(function(err, data) {
    if (err) {
      log.error({'err': err}, 'Failed to get or create a course');
      return callback(err);
    }

    var course = data[0];
    var wasCreated = data[1];

    if (wasCreated) {
      log.info({'id': course.id}, 'Created a new course');
    }

    return callback(null, course);
  });
};
